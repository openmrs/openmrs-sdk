#!/bin/sh
# check for help command

if [ $# -ge 1 ]; then
    case "$1" in
        "-?" | "-h" | "--help" | "-help" | "help" )
            echo
            echo "Usage: omrs-create-module [options]"
            echo
            echo "Creates an OpenMRS Module."
            echo

            echo "These options are available:"
                                                                                        echo "-a [value], --artifact-id [value]"
                                                                echo "    Name of the project (corresponds to the Maven artifactId)."
                    echo
                                                                                        echo "-g [value], --group-id [value]"
                                                                echo "    Identifier for the logical group of artifacts assoceriated with the project (corresponds to the Maven groupId)."
                    echo
                                                                                        echo "-v [value], --version [value]"
                                                                echo "    Version of the project (default is 1.0-SNAPSHOT)."
                    echo
                                                                                        echo "-p [value], --package [value]"
                                                                echo "    Java package that will contain the plugin source code (default is group-id value)."
                    echo
                                                                                        echo "--non-interactive"
                                                                echo "    Turns off interactive mode."
                    echo
                                        exit;;
                        
    esac
fi

# resolve symbolic links
# courtsey of atlassian sdk scripts
PRG="${0}"

while [ -h "${PRG}" ] ; do
  ls=`ls -ld "${PRG}"`
  link=`expr "${ls}" : '.*-> \(.*\)$'`
  if expr "${link}" : '/.*' > /dev/null; then
    PRG="${link}"
  else
    PRG=`dirname "${PRG}"`/"${link}"
  fi
done

PRGDIR=`dirname "${PRG}"`

# get maven location

SDK_HOME="${PRGDIR}"

SDK_HOME=`dirname "${PRGDIR}"`
export SDK_HOME
SDK_VERSION=1.0.1
export SDK_VERSION
MAVEN_HOME="${SDK_HOME}"/apache-maven
MAVEN_EXEC="${MAVEN_HOME}"/bin

# increase maven allocated memory
export MAVEN_OPTS="-Xmx768M -XX:MaxPermSize=256M"
MVN_PARAMS="-s ${MAVEN_HOME}/conf/settings.xml"

# add maven paramters chosen by user
# courtsey of atlassian sdk scripts
while [ $# -gt 0 ]
do
    case "$1" in
                     "-a" |  "--artifact-id")
                                                    MVN_PARAMS="${MVN_PARAMS} -DartifactId='${2}'"
                    shift 2;;
                                     "-g" |  "--group-id")
                                                    MVN_PARAMS="${MVN_PARAMS} -DgroupId='${2}'"
                    shift 2;;
                                     "-v" |  "--version")
                                                    MVN_PARAMS="${MVN_PARAMS} -Dversion='${2}'"
                    shift 2;;
                                     "-p" |  "--package")
                                                    MVN_PARAMS="${MVN_PARAMS} -Dpackage='${2}'"
                    shift 2;;
                                     "--non-interactive")
                                                    MVN_PARAMS="${MVN_PARAMS} -DinteractiveMode=false"
                    shift 1;;
                                *)
                        MVN_PARAMS="${MVN_PARAMS} ${1}"
            shift 1;;     esac
done

# execute maven 

sh -c "${MAVEN_EXEC}/mvn module-wizard:generate ${MVN_PARAMS}"

